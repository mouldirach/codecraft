name: Build CodeCraft

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Clear npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: npm install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        VSCODE_SKIP_NODE_VERSION_CHECK: 1
        npm_config_cache: ~/.npm
        npm_config_prefer_offline: true
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Build for macOS Intel
      run: npm run gulp -- vscode-darwin-x64-min
      
    - name: Create Archive
      run: |
        cd ../VSCode-darwin-x64
        tar -czf CodeCraft-macOS-Intel.tar.gz CodeCraft.app
        
    - name: Upload macOS Build
      uses: actions/upload-artifact@v4
      with:
        name: CodeCraft-macOS-Intel
        path: ../VSCode-darwin-x64/CodeCraft-macOS-Intel.tar.gz
        
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Clear npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: npm install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        VSCODE_SKIP_NODE_VERSION_CHECK: 1
        npm_config_cache: ~/.npm
        npm_config_prefer_offline: true
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Build for Linux x64
      run: npm run gulp -- vscode-linux-x64-min
      
    - name: Create Archive
      run: |
        cd ../VSCode-linux-x64
        tar -czf CodeCraft-Linux-x64.tar.gz *
        
    - name: Upload Linux Build
      uses: actions/upload-artifact@v4
      with:
        name: CodeCraft-Linux-x64
        path: ../VSCode-linux-x64/CodeCraft-Linux-x64.tar.gz
        
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Clear npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: npm install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        VSCODE_SKIP_NODE_VERSION_CHECK: 1
        npm_config_cache: ~/.npm
        npm_config_prefer_offline: true
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Build for Windows x64
      run: npm run gulp -- vscode-win32-x64-min
      
    - name: Create Archive
      run: |
        cd ../VSCode-win32-x64
        7z a CodeCraft-Windows-x64.zip *
        
    - name: Upload Windows Build
      uses: actions/upload-artifact@v4
      with:
        name: CodeCraft-Windows-x64
        path: ../VSCode-win32-x64/CodeCraft-Windows-x64.zip

  release:
    needs: [build-macos, build-linux, build-windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: CodeCraft Release v${{ github.run_number }}
        body: |
          üéâ **CodeCraft Release v${{ github.run_number }}**
          
          Built with Node.js 20 for better compatibility and performance.
          
          **Downloads:**
          - üçé **macOS Intel**: CodeCraft-macOS-Intel.tar.gz
          - üêß **Linux x64**: CodeCraft-Linux-x64.tar.gz  
          - ü™ü **Windows x64**: CodeCraft-Windows-x64.zip
          
          **Installation:**
          1. Download the appropriate file for your platform
          2. Extract the archive
          3. Run CodeCraft!
          
          Built from commit: ${{ github.sha }}
        files: |
          CodeCraft-macOS-Intel/CodeCraft-macOS-Intel.tar.gz
          CodeCraft-Linux-x64/CodeCraft-Linux-x64.tar.gz
          CodeCraft-Windows-x64/CodeCraft-Windows-x64.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}